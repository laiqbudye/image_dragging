{"version":3,"sources":["components/team.jpg","components/Draggable.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Draggable","x","y","canedit","onMove","showControls","diff_X","diff_Y","_ref","useRef","_imageContainerRef","useEffect","current","style","transform","xpos","Number","localStorage","getItem","ypos","_onMouseMove","e","pageX","pageY","preventDefault","_onMouseUp","document","removeEventListener","className","ref","src","image","onMouseDown","button","getBoundingClientRect","left","top","addEventListener","Button","btnid","classname","btntext","onClick","id","App","useState","state","setstate","canEdit","setcanEdit","setShowControls","beforeEditPosX","beforeEditPosY","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7c17b702.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/team.f3ec58ba.jpg\";","import React, { useRef, useEffect } from 'react';\r\nimport image from './team.jpg';\r\n\r\nexport const Draggable = ({ x, y, canedit, onMove, showControls }) => {\r\n    let diff_X = 0;\r\n    let diff_Y = 0;\r\n    const _ref = useRef();\r\n    const _imageContainerRef = useRef();\r\n\r\n    // useEffect which will act like componentDidUpdate\r\n    useEffect(() => {\r\n        _ref.current.style.transform = `translate(${x}px, ${y}px)`;\r\n    }, [x, y]);\r\n\r\n    // getting data from localstorage on componentDidMount\r\n    useEffect(() => {\r\n        let xpos = Number(localStorage.getItem('xpos'));\r\n        let ypos = Number(localStorage.getItem('ypos'));\r\n        onMove(xpos, ypos);\r\n    }, []);\r\n\r\n\r\n\r\n    const _onMouseDown = (e) => {\r\n        if (e.button !== 0) {   // only allows dragging by right click of mouse\r\n            return;\r\n        } else if (!canedit) {\r\n            return;\r\n        }\r\n\r\n    \r\n        const { left, top } = _ref.current.getBoundingClientRect();\r\n        diff_X = e.pageX - left; \r\n        diff_Y = e.pageY - top;   // TO DO: can be done in more better way\r\n       \r\n        document.addEventListener('mousemove', _onMouseMove);  // TO DO: can attach to _imageContainerRef.current\r\n        document.addEventListener('mouseup', _onMouseUp);\r\n        e.preventDefault();\r\n    };\r\n\r\n    const _onMouseMove = (e) => {\r\n        onMove(\r\n            e.pageX - diff_X,\r\n            e.pageY - diff_Y\r\n        );\r\n        e.preventDefault();\r\n    };\r\n\r\n    const _onMouseUp = (e) => {\r\n        document.removeEventListener('mousemove', _onMouseMove);\r\n        document.removeEventListener('mouseup', _onMouseUp);\r\n        e.preventDefault();\r\n    };\r\n\r\n    // const logo = \"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\";\r\n    return (\r\n        <div className='imageContainer' ref={_imageContainerRef}>\r\n            <img src={image} ref={_ref} onMouseDown={_onMouseDown}></img>\r\n            {showControls && <div className=\"text-block\">\r\n                <p>Click & Move cursor</p>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const Button = ({ btnid, classname, btntext, onClick }) => {\r\n    return (\r\n        <div id={btnid} className={classname} onClick={onClick}>\r\n            {btntext}\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useRef } from 'react';\nimport { Draggable } from './components/Draggable';\nimport { Button } from './components/Button';\nimport './App.css';\n\nfunction App() {\n  const [state, setstate] = useState({ x: 0, y: 0 });\n  const [canEdit, setcanEdit] = useState(false);\n  const [showControls, setShowControls] = useState(false);\n\n  const _move = (x, y) => {\n    setstate({ x: x, y: y });\n  }\n\n  let beforeEditPosX = useRef(state.x);\n  let beforeEditPosY = useRef(state.y);\n\n\n  const editBtnClickHandler = () => {\n    beforeEditPosX.current = state.x;\n    beforeEditPosY.current = state.y;\n    setcanEdit(true);\n    setShowControls(true);\n  }\n\n  const saveBtnClickHandler = () => {   // saving current coordinates in local storage\n    if (canEdit) {\n      localStorage.setItem('xpos', state.x);\n      localStorage.setItem('ypos', state.y);\n      setcanEdit(false);\n      setShowControls(false);\n    }\n  }\n\n  const cancelBtnClickHandler = () => {\n    if (canEdit) {\n      setstate({ x: beforeEditPosX.current, y: beforeEditPosY.current });\n    }\n    setcanEdit(false);\n    setShowControls(false);\n  }\n\n  return (\n    <div className=\"container\">\n      <Button btnid={'btnedit'} classname={'btn btn-edit'} btntext={'Edit'} onClick={editBtnClickHandler} />\n      <Draggable x={state.x} y={state.y} canedit={canEdit} onMove={_move} showControls={showControls}/>\n      { showControls && <Button btnid={'btnsave'} classname={'btn btn-save'} btntext={'Save'} onClick={saveBtnClickHandler} /> }\n      { showControls && <Button btnid={'btncancel'} classname={'btn btn-cancel'} btntext={'Cancel'} onClick={cancelBtnClickHandler} /> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}